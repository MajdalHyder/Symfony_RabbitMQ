<?php

namespace ContainerMCvFz3j;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOldSoundRabbitMq_PartsHolderService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'old_sound_rabbit_mq.parts_holder' shared service.
     *
     * @return \OldSound\RabbitMqBundle\RabbitMq\AmqpPartsHolder
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'php-amqplib'.\DIRECTORY_SEPARATOR.'rabbitmq-bundle'.\DIRECTORY_SEPARATOR.'RabbitMq'.\DIRECTORY_SEPARATOR.'AmqpPartsHolder.php';

        $container->services['old_sound_rabbit_mq.parts_holder'] = $instance = new \OldSound\RabbitMqBundle\RabbitMq\AmqpPartsHolder();

        $a = ($container->services['old_sound_rabbit_mq.order_create_producer'] ?? $container->load('getOldSoundRabbitMq_OrderCreateProducerService'));
        $b = ($container->services['old_sound_rabbit_mq.order_create_bmw_consumer'] ?? $container->load('getOldSoundRabbitMq_OrderCreateBmwConsumerService'));
        $c = ($container->services['old_sound_rabbit_mq.order_create_audi_mercedes_consumer'] ?? $container->load('getOldSoundRabbitMq_OrderCreateAudiMercedesConsumerService'));

        $instance->addPart('old_sound_rabbit_mq.base_amqp', $a);
        $instance->addPart('old_sound_rabbit_mq.base_amqp', $b);
        $instance->addPart('old_sound_rabbit_mq.base_amqp', $c);
        $instance->addPart('old_sound_rabbit_mq.producer', $a);
        $instance->addPart('old_sound_rabbit_mq.consumer', $b);
        $instance->addPart('old_sound_rabbit_mq.consumer', $c);

        return $instance;
    }
}
